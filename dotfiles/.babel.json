{
  "{\"filename\":\"/Users/bfeinberg/PycharmProjects/routeWeather/gulpfile.babel.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/Users/bfeinberg/PycharmProjects/routeWeather\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.21.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "gulp",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "gulp"
              }
            ]
          },
          {
            "source": "browserify",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "browserify"
              }
            ]
          },
          {
            "source": "gulp-uglify",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "uglify"
              }
            ]
          },
          {
            "source": "vinyl-source-stream",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "source"
              }
            ]
          },
          {
            "source": "vinyl-buffer",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "buffer"
              }
            ]
          },
          {
            "source": "gulp-sourcemaps",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "sourcemaps"
              }
            ]
          },
          {
            "source": "gulp-util",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "gutil"
              }
            ]
          },
          {
            "source": "babelify",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "babelify"
              }
            ]
          },
          {
            "source": "del",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "del"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/bfeinberg/PycharmProjects/routeWeather/gulpfile.babel.js",
      "filenameRelative": "/Users/bfeinberg/PycharmProjects/routeWeather/gulpfile.babel.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "gulpfile.babel.js",
      "sourceFileName": "gulpfile.babel.js",
      "sourceRoot": "/Users/bfeinberg/PycharmProjects/routeWeather",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/bfeinberg/PycharmProjects/routeWeather",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "gulpfile.babel"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nvar _gulp = require(\"gulp\");\n\nvar _gulp2 = _interopRequireDefault(_gulp);\n\nvar _browserify = require(\"browserify\");\n\nvar _browserify2 = _interopRequireDefault(_browserify);\n\nvar _gulpUglify = require(\"gulp-uglify\");\n\nvar _gulpUglify2 = _interopRequireDefault(_gulpUglify);\n\nvar _vinylSourceStream = require(\"vinyl-source-stream\");\n\nvar _vinylSourceStream2 = _interopRequireDefault(_vinylSourceStream);\n\nvar _vinylBuffer = require(\"vinyl-buffer\");\n\nvar _vinylBuffer2 = _interopRequireDefault(_vinylBuffer);\n\nvar _gulpSourcemaps = require(\"gulp-sourcemaps\");\n\nvar _gulpSourcemaps2 = _interopRequireDefault(_gulpSourcemaps);\n\nvar _gulpUtil = require(\"gulp-util\");\n\nvar _gulpUtil2 = _interopRequireDefault(_gulpUtil);\n\nvar _babelify = require(\"babelify\");\n\nvar _babelify2 = _interopRequireDefault(_babelify);\n\nvar _del = require(\"del\");\n\nvar _del2 = _interopRequireDefault(_del);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulp2.default.task('del', function () {\n    return (0, _del2.default)(['./src/static/scripts/js']);\n});\n\nvar processRelativeUrl = function processRelativeUrl(relativeUrl) {\n    var stripQueryStringAndHashFromPath = function stripQueryStringAndHashFromPath(url) {\n        return url.split('?')[0].split('#')[0];\n    };\n    var rootDir = path.resolve(process.cwd(), '.');\n    var relativePath = stripQueryStringAndHashFromPath(relativeUrl);\n    var queryStringAndHash = relativeUrl.substring(relativePath.length);\n\n    //\n    // Copying files from '../node_modules/bootstrap/' to 'dist/vendor/bootstrap/'\n    //\n    var prefix = 'node_modules/';\n    if (relativeUrl.startsWith(relativePath)) {\n        var vendorPath = 'static/scripts/js/' + relativePath.substring(prefix.length);\n        _gulpUtil2.default.log('Vendor path is', vendorPath, 'prefix length', prefix.length);\n        _gulpUtil2.default.log('relative url', relativeUrl, 'relative path is', relativePath);\n        var source = path.join(rootDir, relativePath);\n        var target = path.join(rootDir, 'src/' + vendorPath);\n\n        _gulpUtil2.default.log('Copying file from ' + JSON.stringify(source) + ' to ' + JSON.stringify(target));\n        fse.copySync(source, target);\n\n        // Returns a new path string with original query string and hash fragments\n        return vendorPath + queryStringAndHash;\n    }\n\n    return relativeUrl;\n};\n\n_gulp2.default.task('jsx', function () {\n    (0, _browserify2.default)({\n        entries: './src/static/scripts/jsx/main.js',\n        extensions: ['.js', '.jsx'],\n        debug: true\n    }).transform(require('browserify-css'), {\n        global: true, processRelativeUrl: processRelativeUrl, rootDir: './', verbose: true, minify: true\n    }).transform(_babelify2.default).bundle().on('error', function (err) {\n        _gulpUtil2.default.log(\"Browserify Error\", _gulpUtil2.default.colors.red(err.message));\n    }).pipe((0, _vinylSourceStream2.default)('index.js')).pipe((0, _vinylBuffer2.default)()).pipe((0, _gulpUglify2.default)()).pipe(_gulp2.default.dest('./src/static/scripts/js/'));\n});\n\n_gulp2.default.task('bundle', function () {\n    return (0, _browserify2.default)({\n        extensions: ['.js', '.jsx'],\n        entries: './src/static/scripts/jsx/main.js' }).transform(_babelify2.default.configure({\n        ignore: /(bower_components)|(node_modules)/\n    })).bundle().on(\"error\", function (err) {\n        console.log(\"Error : \" + err.message);\n    }).pipe((0, _vinylSourceStream2.default)('bundle.js')).pipe(_gulp2.default.dest('./src/static/scripts/js/'));\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInRhc2siLCJwcm9jZXNzUmVsYXRpdmVVcmwiLCJyZWxhdGl2ZVVybCIsInN0cmlwUXVlcnlTdHJpbmdBbmRIYXNoRnJvbVBhdGgiLCJ1cmwiLCJzcGxpdCIsInJvb3REaXIiLCJwYXRoIiwicmVzb2x2ZSIsInByb2Nlc3MiLCJjd2QiLCJyZWxhdGl2ZVBhdGgiLCJxdWVyeVN0cmluZ0FuZEhhc2giLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJwcmVmaXgiLCJzdGFydHNXaXRoIiwidmVuZG9yUGF0aCIsImxvZyIsInNvdXJjZSIsImpvaW4iLCJ0YXJnZXQiLCJKU09OIiwic3RyaW5naWZ5IiwiZnNlIiwiY29weVN5bmMiLCJlbnRyaWVzIiwiZXh0ZW5zaW9ucyIsImRlYnVnIiwidHJhbnNmb3JtIiwicmVxdWlyZSIsImdsb2JhbCIsInZlcmJvc2UiLCJtaW5pZnkiLCJidW5kbGUiLCJvbiIsImNvbG9ycyIsInJlZCIsImVyciIsIm1lc3NhZ2UiLCJwaXBlIiwiZGVzdCIsImNvbmZpZ3VyZSIsImlnbm9yZSIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxlQUFLQSxJQUFMLENBQVUsS0FBVixFQUFpQixZQUFZO0FBQ3pCLFdBQU8sbUJBQUksQ0FBQyx5QkFBRCxDQUFKLENBQVA7QUFDSCxDQUZEOztBQUlBLElBQUlDLHFCQUFxQixTQUFyQkEsa0JBQXFCLENBQVNDLFdBQVQsRUFBc0I7QUFDM0MsUUFBSUMsa0NBQWtDLFNBQWxDQSwrQkFBa0MsQ0FBU0MsR0FBVCxFQUFjO0FBQ2hELGVBQU9BLElBQUlDLEtBQUosQ0FBVSxHQUFWLEVBQWUsQ0FBZixFQUFrQkEsS0FBbEIsQ0FBd0IsR0FBeEIsRUFBNkIsQ0FBN0IsQ0FBUDtBQUNILEtBRkQ7QUFHQSxRQUFJQyxVQUFVQyxLQUFLQyxPQUFMLENBQWFDLFFBQVFDLEdBQVIsRUFBYixFQUE0QixHQUE1QixDQUFkO0FBQ0EsUUFBSUMsZUFBZVIsZ0NBQWdDRCxXQUFoQyxDQUFuQjtBQUNBLFFBQUlVLHFCQUFxQlYsWUFBWVcsU0FBWixDQUFzQkYsYUFBYUcsTUFBbkMsQ0FBekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBSUMsU0FBUyxlQUFiO0FBQ0EsUUFBSWIsWUFBWWMsVUFBWixDQUF1QkwsWUFBdkIsQ0FBSixFQUEwQztBQUN0QyxZQUFJTSxhQUFhLHVCQUF1Qk4sYUFBYUUsU0FBYixDQUF1QkUsT0FBT0QsTUFBOUIsQ0FBeEM7QUFDQSwyQkFBTUksR0FBTixDQUFVLGdCQUFWLEVBQTRCRCxVQUE1QixFQUF3QyxlQUF4QyxFQUF5REYsT0FBT0QsTUFBaEU7QUFDQSwyQkFBTUksR0FBTixDQUFVLGNBQVYsRUFBMEJoQixXQUExQixFQUF1QyxrQkFBdkMsRUFBMkRTLFlBQTNEO0FBQ0EsWUFBSVEsU0FBU1osS0FBS2EsSUFBTCxDQUFVZCxPQUFWLEVBQW1CSyxZQUFuQixDQUFiO0FBQ0EsWUFBSVUsU0FBU2QsS0FBS2EsSUFBTCxDQUFVZCxPQUFWLEVBQW1CLFNBQVNXLFVBQTVCLENBQWI7O0FBRUEsMkJBQU1DLEdBQU4sQ0FBVSx1QkFBdUJJLEtBQUtDLFNBQUwsQ0FBZUosTUFBZixDQUF2QixHQUFnRCxNQUFoRCxHQUF5REcsS0FBS0MsU0FBTCxDQUFlRixNQUFmLENBQW5FO0FBQ0FHLFlBQUlDLFFBQUosQ0FBYU4sTUFBYixFQUFxQkUsTUFBckI7O0FBRUE7QUFDQSxlQUFPSixhQUFhTCxrQkFBcEI7QUFDSDs7QUFFRCxXQUFPVixXQUFQO0FBQ0gsQ0EzQkQ7O0FBNkJBLGVBQUtGLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFlBQU07QUFDckIsOEJBQVc7QUFDVDBCLGlCQUFTLGtDQURBO0FBRVRDLG9CQUFZLENBQUMsS0FBRCxFQUFPLE1BQVAsQ0FGSDtBQUdUQyxlQUFPO0FBSEUsS0FBWCxFQUlHQyxTQUpILENBSWFDLFFBQVEsZ0JBQVIsQ0FKYixFQUl1QztBQUNuQ0MsZ0JBQU8sSUFENEIsRUFDdEI5QixvQkFBb0JBLGtCQURFLEVBQ2tCSyxTQUFRLElBRDFCLEVBQ2dDMEIsU0FBUSxJQUR4QyxFQUM4Q0MsUUFBTztBQURyRCxLQUp2QyxFQU9DSixTQVBELHFCQVFDSyxNQVJELEdBU0NDLEVBVEQsQ0FTSSxPQVRKLEVBU2EsZUFBTztBQUNsQiwyQkFBTWpCLEdBQU4sQ0FBVSxrQkFBVixFQUE4QixtQkFBTWtCLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkMsSUFBSUMsT0FBckIsQ0FBOUI7QUFDRCxLQVhELEVBWUNDLElBWkQsQ0FZTSxpQ0FBTyxVQUFQLENBWk4sRUFhQ0EsSUFiRCxDQWFNLDRCQWJOLEVBY0NBLElBZEQsQ0FjTSwyQkFkTixFQWVDQSxJQWZELENBZU0sZUFBS0MsSUFBTCxDQUFVLDBCQUFWLENBZk47QUFnQkQsQ0FqQkQ7O0FBbUJBLGVBQUt6QyxJQUFMLENBQVUsUUFBVixFQUFvQixZQUFXO0FBQzNCLFdBQU8sMEJBQVc7QUFDZDJCLG9CQUFZLENBQUMsS0FBRCxFQUFRLE1BQVIsQ0FERTtBQUVkRCxpQkFBUyxrQ0FGSyxFQUFYLEVBR0ZHLFNBSEUsQ0FHUSxtQkFBU2EsU0FBVCxDQUFtQjtBQUMxQkMsZ0JBQVE7QUFEa0IsS0FBbkIsQ0FIUixFQU1GVCxNQU5FLEdBT0ZDLEVBUEUsQ0FPQyxPQVBELEVBT1UsVUFBVUcsR0FBVixFQUFlO0FBQUVNLGdCQUFRMUIsR0FBUixDQUFZLGFBQWFvQixJQUFJQyxPQUE3QjtBQUF3QyxLQVBuRSxFQVFGQyxJQVJFLENBUUcsaUNBQU8sV0FBUCxDQVJILEVBU0ZBLElBVEUsQ0FTRyxlQUFLQyxJQUFMLENBQVUsMEJBQVYsQ0FUSCxDQUFQO0FBVUgsQ0FYRCIsImZpbGUiOiJndWxwZmlsZS5iYWJlbC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYmZlaW5iZXJnL1B5Y2hhcm1Qcm9qZWN0cy9yb3V0ZVdlYXRoZXIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xuaW1wb3J0IGJyb3dzZXJpZnkgZnJvbSBcImJyb3dzZXJpZnlcIjtcbmltcG9ydCB1Z2xpZnkgZnJvbSBcImd1bHAtdWdsaWZ5XCI7XG5pbXBvcnQgc291cmNlIGZyb20gXCJ2aW55bC1zb3VyY2Utc3RyZWFtXCI7XG5pbXBvcnQgYnVmZmVyIGZyb20gXCJ2aW55bC1idWZmZXJcIjtcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcbmltcG9ydCBiYWJlbGlmeSBmcm9tICdiYWJlbGlmeSc7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5cbmd1bHAudGFzaygnZGVsJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkZWwoWycuL3NyYy9zdGF0aWMvc2NyaXB0cy9qcyddKTtcbn0pO1xuXG5sZXQgcHJvY2Vzc1JlbGF0aXZlVXJsID0gZnVuY3Rpb24ocmVsYXRpdmVVcmwpIHtcbiAgICB2YXIgc3RyaXBRdWVyeVN0cmluZ0FuZEhhc2hGcm9tUGF0aCA9IGZ1bmN0aW9uKHVybCkge1xuICAgICAgICByZXR1cm4gdXJsLnNwbGl0KCc/JylbMF0uc3BsaXQoJyMnKVswXTtcbiAgICB9O1xuICAgIHZhciByb290RGlyID0gcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksICcuJyk7XG4gICAgdmFyIHJlbGF0aXZlUGF0aCA9IHN0cmlwUXVlcnlTdHJpbmdBbmRIYXNoRnJvbVBhdGgocmVsYXRpdmVVcmwpO1xuICAgIHZhciBxdWVyeVN0cmluZ0FuZEhhc2ggPSByZWxhdGl2ZVVybC5zdWJzdHJpbmcocmVsYXRpdmVQYXRoLmxlbmd0aCk7XG5cbiAgICAvL1xuICAgIC8vIENvcHlpbmcgZmlsZXMgZnJvbSAnLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC8nIHRvICdkaXN0L3ZlbmRvci9ib290c3RyYXAvJ1xuICAgIC8vXG4gICAgdmFyIHByZWZpeCA9ICdub2RlX21vZHVsZXMvJztcbiAgICBpZiAocmVsYXRpdmVVcmwuc3RhcnRzV2l0aChyZWxhdGl2ZVBhdGgpKSB7XG4gICAgICAgIHZhciB2ZW5kb3JQYXRoID0gJ3N0YXRpYy9zY3JpcHRzL2pzLycgKyByZWxhdGl2ZVBhdGguc3Vic3RyaW5nKHByZWZpeC5sZW5ndGgpO1xuICAgICAgICBndXRpbC5sb2coJ1ZlbmRvciBwYXRoIGlzJywgdmVuZG9yUGF0aCwgJ3ByZWZpeCBsZW5ndGgnLCBwcmVmaXgubGVuZ3RoKTtcbiAgICAgICAgZ3V0aWwubG9nKCdyZWxhdGl2ZSB1cmwnLCByZWxhdGl2ZVVybCwgJ3JlbGF0aXZlIHBhdGggaXMnLCByZWxhdGl2ZVBhdGgpO1xuICAgICAgICB2YXIgc291cmNlID0gcGF0aC5qb2luKHJvb3REaXIsIHJlbGF0aXZlUGF0aCk7XG4gICAgICAgIHZhciB0YXJnZXQgPSBwYXRoLmpvaW4ocm9vdERpciwgJ3NyYy8nICsgdmVuZG9yUGF0aCk7XG5cbiAgICAgICAgZ3V0aWwubG9nKCdDb3B5aW5nIGZpbGUgZnJvbSAnICsgSlNPTi5zdHJpbmdpZnkoc291cmNlKSArICcgdG8gJyArIEpTT04uc3RyaW5naWZ5KHRhcmdldCkpO1xuICAgICAgICBmc2UuY29weVN5bmMoc291cmNlLCB0YXJnZXQpO1xuXG4gICAgICAgIC8vIFJldHVybnMgYSBuZXcgcGF0aCBzdHJpbmcgd2l0aCBvcmlnaW5hbCBxdWVyeSBzdHJpbmcgYW5kIGhhc2ggZnJhZ21lbnRzXG4gICAgICAgIHJldHVybiB2ZW5kb3JQYXRoICsgcXVlcnlTdHJpbmdBbmRIYXNoO1xuICAgIH1cblxuICAgIHJldHVybiByZWxhdGl2ZVVybDtcbn1cblxuZ3VscC50YXNrKCdqc3gnLCAoKSA9PiB7XG4gIGJyb3dzZXJpZnkoe1xuICAgIGVudHJpZXM6ICcuL3NyYy9zdGF0aWMvc2NyaXB0cy9qc3gvbWFpbi5qcycsXG4gICAgZXh0ZW5zaW9uczogWycuanMnLCcuanN4J10sXG4gICAgZGVidWc6IHRydWVcbiAgfSkudHJhbnNmb3JtKHJlcXVpcmUoJ2Jyb3dzZXJpZnktY3NzJykse1xuICAgICAgZ2xvYmFsOnRydWUsIHByb2Nlc3NSZWxhdGl2ZVVybDogcHJvY2Vzc1JlbGF0aXZlVXJsLCByb290RGlyOicuLycsIHZlcmJvc2U6dHJ1ZSwgbWluaWZ5OnRydWVcbiAgfSlcbiAgLnRyYW5zZm9ybShiYWJlbGlmeSlcbiAgLmJ1bmRsZSgpXG4gIC5vbignZXJyb3InLCBlcnIgPT4ge1xuICAgIGd1dGlsLmxvZyhcIkJyb3dzZXJpZnkgRXJyb3JcIiwgZ3V0aWwuY29sb3JzLnJlZChlcnIubWVzc2FnZSkpXG4gIH0pXG4gIC5waXBlKHNvdXJjZSgnaW5kZXguanMnKSlcbiAgLnBpcGUoYnVmZmVyKCkpXG4gIC5waXBlKHVnbGlmeSgpKVxuICAucGlwZShndWxwLmRlc3QoJy4vc3JjL3N0YXRpYy9zY3JpcHRzL2pzLycpKTtcbn0pO1xuXG5ndWxwLnRhc2soJ2J1bmRsZScsIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBicm93c2VyaWZ5KHtcbiAgICAgICAgZXh0ZW5zaW9uczogWycuanMnLCAnLmpzeCddLFxuICAgICAgICBlbnRyaWVzOiAnLi9zcmMvc3RhdGljL3NjcmlwdHMvanN4L21haW4uanMnfSlcbiAgICAgICAgLnRyYW5zZm9ybShiYWJlbGlmeS5jb25maWd1cmUoe1xuICAgICAgICAgICAgaWdub3JlOiAvKGJvd2VyX2NvbXBvbmVudHMpfChub2RlX21vZHVsZXMpL1xuICAgICAgICB9KSlcbiAgICAgICAgLmJ1bmRsZSgpXG4gICAgICAgIC5vbihcImVycm9yXCIsIGZ1bmN0aW9uIChlcnIpIHsgY29uc29sZS5sb2coXCJFcnJvciA6IFwiICsgZXJyLm1lc3NhZ2UpOyB9KVxuICAgICAgICAucGlwZShzb3VyY2UoJ2J1bmRsZS5qcycpKVxuICAgICAgICAucGlwZShndWxwLmRlc3QoJy4vc3JjL3N0YXRpYy9zY3JpcHRzL2pzLycpKTtcbn0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "task",
        "processRelativeUrl",
        "relativeUrl",
        "stripQueryStringAndHashFromPath",
        "url",
        "split",
        "rootDir",
        "path",
        "resolve",
        "process",
        "cwd",
        "relativePath",
        "queryStringAndHash",
        "substring",
        "length",
        "prefix",
        "startsWith",
        "vendorPath",
        "log",
        "source",
        "join",
        "target",
        "JSON",
        "stringify",
        "fse",
        "copySync",
        "entries",
        "extensions",
        "debug",
        "transform",
        "require",
        "global",
        "verbose",
        "minify",
        "bundle",
        "on",
        "colors",
        "red",
        "err",
        "message",
        "pipe",
        "dest",
        "configure",
        "ignore",
        "console"
      ],
      "mappings": "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",
      "file": "gulpfile.babel.js",
      "sourceRoot": "/Users/bfeinberg/PycharmProjects/routeWeather",
      "sourcesContent": [
        "import gulp from \"gulp\";\nimport browserify from \"browserify\";\nimport uglify from \"gulp-uglify\";\nimport source from \"vinyl-source-stream\";\nimport buffer from \"vinyl-buffer\";\nimport sourcemaps from 'gulp-sourcemaps';\nimport gutil from 'gulp-util';\nimport babelify from 'babelify';\nimport del from 'del';\n\ngulp.task('del', function () {\n    return del(['./src/static/scripts/js']);\n});\n\nlet processRelativeUrl = function(relativeUrl) {\n    var stripQueryStringAndHashFromPath = function(url) {\n        return url.split('?')[0].split('#')[0];\n    };\n    var rootDir = path.resolve(process.cwd(), '.');\n    var relativePath = stripQueryStringAndHashFromPath(relativeUrl);\n    var queryStringAndHash = relativeUrl.substring(relativePath.length);\n\n    //\n    // Copying files from '../node_modules/bootstrap/' to 'dist/vendor/bootstrap/'\n    //\n    var prefix = 'node_modules/';\n    if (relativeUrl.startsWith(relativePath)) {\n        var vendorPath = 'static/scripts/js/' + relativePath.substring(prefix.length);\n        gutil.log('Vendor path is', vendorPath, 'prefix length', prefix.length);\n        gutil.log('relative url', relativeUrl, 'relative path is', relativePath);\n        var source = path.join(rootDir, relativePath);\n        var target = path.join(rootDir, 'src/' + vendorPath);\n\n        gutil.log('Copying file from ' + JSON.stringify(source) + ' to ' + JSON.stringify(target));\n        fse.copySync(source, target);\n\n        // Returns a new path string with original query string and hash fragments\n        return vendorPath + queryStringAndHash;\n    }\n\n    return relativeUrl;\n}\n\ngulp.task('jsx', () => {\n  browserify({\n    entries: './src/static/scripts/jsx/main.js',\n    extensions: ['.js','.jsx'],\n    debug: true\n  }).transform(require('browserify-css'),{\n      global:true, processRelativeUrl: processRelativeUrl, rootDir:'./', verbose:true, minify:true\n  })\n  .transform(babelify)\n  .bundle()\n  .on('error', err => {\n    gutil.log(\"Browserify Error\", gutil.colors.red(err.message))\n  })\n  .pipe(source('index.js'))\n  .pipe(buffer())\n  .pipe(uglify())\n  .pipe(gulp.dest('./src/static/scripts/js/'));\n});\n\ngulp.task('bundle', function() {\n    return browserify({\n        extensions: ['.js', '.jsx'],\n        entries: './src/static/scripts/jsx/main.js'})\n        .transform(babelify.configure({\n            ignore: /(bower_components)|(node_modules)/\n        }))\n        .bundle()\n        .on(\"error\", function (err) { console.log(\"Error : \" + err.message); })\n        .pipe(source('bundle.js'))\n        .pipe(gulp.dest('./src/static/scripts/js/'));\n});\n"
      ]
    },
    "mtime": 1484109918000
  }
}